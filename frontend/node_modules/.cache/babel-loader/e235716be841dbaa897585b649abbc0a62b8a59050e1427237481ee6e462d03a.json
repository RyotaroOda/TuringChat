{"ast":null,"code":"import React from\"react\";import{BrowserRouter as Router,Route,Routes}from\"react-router-dom\";import HomeView from\"./views/HomeView.tsx\";import BattleView from\"./views/BattleView.tsx\";import ResultView from\"./views/ResultView.tsx\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const App=()=>{// const [message, setMessage] = useState(\"\");\n// const [messages, setMessages] = useState<string[]>([]);\n// useEffect(() => {\n//   // サーバーからメッセージを受け取った時の処理\n//   onMessageReceived((msg: string) => {\n//     setMessages((prevMessages) => [...prevMessages, msg]);\n//   });\n//   return () => {\n//     // クリーンアップ時にリスナーを解除\n//     // socket.off(\"chat message\")はsocket.tsで実装する場合もあり\n//   };\n// }, []);\n// const handleSendMessage = () => {\n//   if (message.trim()) {\n//     sendMessage(message);\n//     setMessage(\"\");\n//   }\n// };\nreturn/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/battle/:roomId\",element:/*#__PURE__*/_jsx(BattleView,{})}),/*#__PURE__*/_jsx(Route,{path:\"/result\",element:/*#__PURE__*/_jsx(ResultView,{})}),/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(HomeView,{})})]})});};export default App;","map":{"version":3,"names":["React","BrowserRouter","Router","Route","Routes","HomeView","BattleView","ResultView","jsx","_jsx","jsxs","_jsxs","App","children","path","element"],"sources":["/Users/ryotarooda/Desktop/卒論/TuringChats/TuringChat-D4/frontend/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport HomeView from \"./views/HomeView.tsx\";\nimport BattleView from \"./views/BattleView.tsx\";\nimport ResultView from \"./views/ResultView.tsx\";\n\nconst App: React.FC = () => {\n  // const [message, setMessage] = useState(\"\");\n  // const [messages, setMessages] = useState<string[]>([]);\n\n  // useEffect(() => {\n  //   // サーバーからメッセージを受け取った時の処理\n  //   onMessageReceived((msg: string) => {\n  //     setMessages((prevMessages) => [...prevMessages, msg]);\n  //   });\n\n  //   return () => {\n  //     // クリーンアップ時にリスナーを解除\n  //     // socket.off(\"chat message\")はsocket.tsで実装する場合もあり\n  //   };\n  // }, []);\n\n  // const handleSendMessage = () => {\n  //   if (message.trim()) {\n  //     sendMessage(message);\n  //     setMessage(\"\");\n  //   }\n  // };\n\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/battle/:roomId\" element={<BattleView />} />\n        <Route path=\"/result\" element={<ResultView />} />\n        <Route path=\"/\" element={<HomeView />} />\n      </Routes>\n    </Router>\n  );\n};\n\nexport default App;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAA+B,OAAO,CAClD,OAASC,aAAa,GAAI,CAAAC,MAAM,CAAEC,KAAK,CAAEC,MAAM,KAAQ,kBAAkB,CACzE,MAAO,CAAAC,QAAQ,KAAM,sBAAsB,CAC3C,MAAO,CAAAC,UAAU,KAAM,wBAAwB,CAC/C,MAAO,CAAAC,UAAU,KAAM,wBAAwB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEhD,KAAM,CAAAC,GAAa,CAAGA,CAAA,GAAM,CAC1B;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA,mBACEH,IAAA,CAACP,MAAM,EAAAW,QAAA,cACLF,KAAA,CAACP,MAAM,EAAAS,QAAA,eACLJ,IAAA,CAACN,KAAK,EAACW,IAAI,CAAC,iBAAiB,CAACC,OAAO,cAAEN,IAAA,CAACH,UAAU,GAAE,CAAE,CAAE,CAAC,cACzDG,IAAA,CAACN,KAAK,EAACW,IAAI,CAAC,SAAS,CAACC,OAAO,cAAEN,IAAA,CAACF,UAAU,GAAE,CAAE,CAAE,CAAC,cACjDE,IAAA,CAACN,KAAK,EAACW,IAAI,CAAC,GAAG,CAACC,OAAO,cAAEN,IAAA,CAACJ,QAAQ,GAAE,CAAE,CAAE,CAAC,EACnC,CAAC,CACH,CAAC,CAEb,CAAC,CAED,cAAe,CAAAO,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
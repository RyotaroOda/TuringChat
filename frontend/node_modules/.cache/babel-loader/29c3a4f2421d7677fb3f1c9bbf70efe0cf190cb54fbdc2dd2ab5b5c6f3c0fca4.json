{"ast":null,"code":"import{io}from\"socket.io-client\";// サーバーとの接続を作成\nconst socket=io(\"http://localhost:3000\",{transports:[\"websocket\"]// 必要に応じて設定\n});// サーバーとの接続状態をログに出力\nsocket.on(\"connect\",()=>{console.log(\"Connected to server\");});socket.on(\"disconnect\",()=>{console.log(\"Disconnected from server\");});// メッセージを送信\nexport const sendMessage=(roomId,message)=>{socket.emit(\"sendMessage\",{roomId,message});console.log(\"Sent socket message:\",message);};// サーバーからメッセージを受け取るリスナー\nexport const onMessageReceived=callback=>{socket.on(\"receiveMessage\",callback);console.log(\"Listening for messages...\");};//マッチングリクエストを送信\nexport const requestMatch=()=>{socket.emit(\"requestMatch\");};//プレイヤー名を設定\nexport const savePlayerName=playerName=>{socket.emit(\"savePlayerName\",playerName);};//マッチング成功時の処理\nexport const onMatchFound=callback=>{socket.on(\"matchFound\",callback);};// ターン更新リスナー\nexport const onTurnUpdate=callback=>{socket.on(\"activePlayerUpdate\",callback);};// メッセージ数更新リスナー\nexport const onTurnCountUpdate=callback=>{socket.on(\"turnCountUpdate\",callback);};// バトル終了リスナー\nexport const onBattleEnd=callback=>{socket.on(\"battleEnd\",callback);};export default socket;","map":{"version":3,"names":["io","socket","transports","on","console","log","sendMessage","roomId","message","emit","onMessageReceived","callback","requestMatch","savePlayerName","playerName","onMatchFound","onTurnUpdate","onTurnCountUpdate","onBattleEnd"],"sources":["/Users/ryotarooda/Desktop/卒論/TuringChats/TuringChat-D4/frontend/src/services/socket.ts"],"sourcesContent":["import { io, Socket } from \"socket.io-client\";\n\n// サーバーとの接続を作成\nconst socket: Socket = io(\"http://localhost:3000\", {\n  transports: [\"websocket\"], // 必要に応じて設定\n});\n\n// サーバーとの接続状態をログに出力\nsocket.on(\"connect\", () => {\n  console.log(\"Connected to server\");\n});\n\nsocket.on(\"disconnect\", () => {\n  console.log(\"Disconnected from server\");\n});\n\n// メッセージを送信\nexport const sendMessage = (roomId: string, message: string) => {\n  socket.emit(\"sendMessage\", { roomId, message });\n  console.log(\"Sent socket message:\", message);\n};\n\n// サーバーからメッセージを受け取るリスナー\nexport const onMessageReceived = (\n  callback: (data: { senderId: string; message: string }) => void,\n) => {\n  socket.on(\"receiveMessage\", callback);\n  console.log(\"Listening for messages...\");\n};\n\n//マッチングリクエストを送信\nexport const requestMatch = () => {\n  socket.emit(\"requestMatch\");\n};\n\n//プレイヤー名を設定\nexport const savePlayerName = (playerName: string) => {\n  socket.emit(\"savePlayerName\", playerName);\n};\n\n//マッチング成功時の処理\nexport const onMatchFound = (\n  callback: (data: {\n    roomId: string;\n    opponentId: string;\n    opponentName: string;\n    battleConfig: any;\n  }) => void,\n) => {\n  socket.on(\"matchFound\", callback);\n};\n\n// ターン更新リスナー\nexport const onTurnUpdate = (callback: (data: { roomData: any }) => void) => {\n  socket.on(\"activePlayerUpdate\", callback);\n};\n\n// メッセージ数更新リスナー\nexport const onTurnCountUpdate = (\n  callback: (data: { messageCount: number }) => void,\n) => {\n  socket.on(\"turnCountUpdate\", callback);\n};\n\n// バトル終了リスナー\nexport const onBattleEnd = (callback: (data: { roomId: string }) => void) => {\n  socket.on(\"battleEnd\", callback);\n};\n\nexport default socket;\n"],"mappings":"AAAA,OAASA,EAAE,KAAgB,kBAAkB,CAE7C;AACA,KAAM,CAAAC,MAAc,CAAGD,EAAE,CAAC,uBAAuB,CAAE,CACjDE,UAAU,CAAE,CAAC,WAAW,CAAG;AAC7B,CAAC,CAAC,CAEF;AACAD,MAAM,CAACE,EAAE,CAAC,SAAS,CAAE,IAAM,CACzBC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC,CACpC,CAAC,CAAC,CAEFJ,MAAM,CAACE,EAAE,CAAC,YAAY,CAAE,IAAM,CAC5BC,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC,CACzC,CAAC,CAAC,CAEF;AACA,MAAO,MAAM,CAAAC,WAAW,CAAGA,CAACC,MAAc,CAAEC,OAAe,GAAK,CAC9DP,MAAM,CAACQ,IAAI,CAAC,aAAa,CAAE,CAAEF,MAAM,CAAEC,OAAQ,CAAC,CAAC,CAC/CJ,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAEG,OAAO,CAAC,CAC9C,CAAC,CAED;AACA,MAAO,MAAM,CAAAE,iBAAiB,CAC5BC,QAA+D,EAC5D,CACHV,MAAM,CAACE,EAAE,CAAC,gBAAgB,CAAEQ,QAAQ,CAAC,CACrCP,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC,CAC1C,CAAC,CAED;AACA,MAAO,MAAM,CAAAO,YAAY,CAAGA,CAAA,GAAM,CAChCX,MAAM,CAACQ,IAAI,CAAC,cAAc,CAAC,CAC7B,CAAC,CAED;AACA,MAAO,MAAM,CAAAI,cAAc,CAAIC,UAAkB,EAAK,CACpDb,MAAM,CAACQ,IAAI,CAAC,gBAAgB,CAAEK,UAAU,CAAC,CAC3C,CAAC,CAED;AACA,MAAO,MAAM,CAAAC,YAAY,CACvBJ,QAKU,EACP,CACHV,MAAM,CAACE,EAAE,CAAC,YAAY,CAAEQ,QAAQ,CAAC,CACnC,CAAC,CAED;AACA,MAAO,MAAM,CAAAK,YAAY,CAAIL,QAA2C,EAAK,CAC3EV,MAAM,CAACE,EAAE,CAAC,oBAAoB,CAAEQ,QAAQ,CAAC,CAC3C,CAAC,CAED;AACA,MAAO,MAAM,CAAAM,iBAAiB,CAC5BN,QAAkD,EAC/C,CACHV,MAAM,CAACE,EAAE,CAAC,iBAAiB,CAAEQ,QAAQ,CAAC,CACxC,CAAC,CAED;AACA,MAAO,MAAM,CAAAO,WAAW,CAAIP,QAA4C,EAAK,CAC3EV,MAAM,CAACE,EAAE,CAAC,WAAW,CAAEQ,QAAQ,CAAC,CAClC,CAAC,CAED,cAAe,CAAAV,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}